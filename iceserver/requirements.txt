1, The server should be able to scale well so that the turn functionality runs separately from the basic stun server functionality.
2. The new allocation for any user must be left to the server application. TURNS must not impose anything by itself. The server application will decide if the number of allocations per user must be imposed or not.
3. Regarding dynamic parameters such as bandwidth, the administrator should be able to set the usage during allocation and also change the same when the allocation is running. The idea is to provide all the possible interfaces for the administrator to control all the parameters. This is to handle scenarios where the administrator has provided 
   - with limited bandwidth per monta/week.
   - bandwidth per day.
   - wants to increase the bandwidth on the go, so should be able to increase the same when the allocation is running.
4. The new allocation must be notified by TURNS to server application by callback and the server application must then decide on the same in a different thread/process and approve/decline the allocation via a direct api call. The callback must not be used for approving/denying of the allocation.
5. The list of allocations (contexts) which are created and maintained in the turns module but are in unapproved state (that is not yet approved by the server application OR contexts that have been created when the initial allocate request is received without credentials) should be kept separate from the list of approved allocations. This is because some one can launch DDOS attacks by pumping initial allocate requests, and hence depleting the server resources and bring it down. In order to handle such scenarios, the pool of unapproved allocations must be kept separate from the approved allocations. Further, the unapproved allocation pool should be limited by some constant. Once that limit is reached, further initial allocate requests can be ignored or rejected with some error. Once the unapproved allocation is approved by the server application, the allocation context must be moved from the unapproved list to the approved list.
